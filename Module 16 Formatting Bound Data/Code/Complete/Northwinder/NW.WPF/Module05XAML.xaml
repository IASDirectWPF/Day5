<Window x:Class="NW.WPF.Module05XAML"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NW.WPF"
        mc:Ignorable="d"
        Title="Module05XAML" Height="450" Width="800">
    <StackPanel>
        <!-- Elements and Attributes-->
        <!-- Element Button will instantiate a Button object -->
        <!-- Content, Height, and Width Attributes will be set on the Button object's Properties-->
        <Button Content="Button Element" MinHeight="50" MaxHeight="100" MinWidth="50" MaxWidth="100"/>
        <!-- new System.Windows.Controls.Button() { Content = "OK", Height = 50, Width = 100 } -->

        <!-- Property Element Syntax for Complex Values that Attribute / Value pairs can't handle -->
        <Button MinHeight="50" MaxHeight="100" MinWidth="50" MaxWidth="100">
            <Button.Content>
                <Rectangle Height="10" Width="10" Fill="Blue"></Rectangle>
            </Button.Content>
        </Button>
        
        <!-- Type Converters -->
        <!-- Select Fill Attribute in Rectangle Element and hit F12 for Go To Definition -->
        <!-- Then select Brush and hit F12 -->
        <!-- Note that the Brush abstract class is annotated with [TypeConverter(typeof(BrushConverter))] -->
        <!-- Select BrushConverter and hit F12 to see definition of Type Converter -->

        <!-- Markup Extensions -->
        <Button Content="Markup Extension" MinHeight="50" MaxHeight="100" MinWidth="50" MaxWidth="100" Background="{x:Static SystemColors.ActiveCaptionBrush}"/>
        <Button Content="Markup Extension" MinHeight="50" MaxHeight="100" MinWidth="50" MaxWidth="100">
            <Button.Background>
                <x:Static Member="SystemColors.ActiveCaptionBrush"></x:Static>
            </Button.Background>
        </Button>

        <!-- Nested Elements -->
        <!-- Use Properties Window to Verify what Property the Element content is mapped to -->
        <!-- Also use F12 to view ContentProperty attributes -->

        <!-- TexBox is annotated with [ContentProperty("Text")] -->
        <TextBox MaxWidth="250">Text Property</TextBox>
        <!-- Button -> ButtonBase -> ContentControl annotated with [ContentProperty("Content")] -->
        <Button MinHeight="50" MaxHeight="100" MinWidth="50" MaxWidth="100">Content Property</Button>
        <!-- ListBox -> Selector -> ItemsControl annotated with [ContentProperty("Items")] -->
        <!-- And ItemsControl.Items -> ItemsCollection -> IList so XAML processor knows its a collection -->
        <ListBox MaxWidth="250">
            <ListBoxItem>Item 1</ListBoxItem>
            <ListBoxItem>Item 2</ListBoxItem>
            <ListBoxItem>Item 3</ListBoxItem>
        </ListBox>

        <!-- Naming Elements -->
        <TextBox Name="TextBoxHasName" MaxWidth="250"/>
    </StackPanel>
</Window>
